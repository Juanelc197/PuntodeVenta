<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>